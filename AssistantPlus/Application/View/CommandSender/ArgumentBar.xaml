<local:CustomControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:community="using:CommunityToolkit.WinUI"
	xmlns:communityControls="using:CommunityToolkit.WinUI.Controls"
	xmlns:local="using:Twinning.AssistantPlus"
	xmlns:localViewCommandSender="using:Twinning.AssistantPlus.View.CommandSender"
	xmlns:my="using:Twinning.AssistantPlus.Control"
	mc:Ignorable="d"
	x:DefaultBindMode="OneWay"
	x:Class="Twinning.AssistantPlus.View.CommandSender.ArgumentBar"
	>
	<my:Stack
		HorizontalAlignment="Stretch"
		VerticalAlignment="Stretch"
		Orientation="Horizontal"
		Spacing="8"
		>
		<Button
			ToolTipService.ToolTip="{x:Bind Controller.uLabel_ToolTip}"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Width="208"
			>
			<TextBlock
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Foreground="{x:Bind Controller.uLabelText_Foreground}"
				Style="{ThemeResource BodyStrongTextBlockStyle}"
				TextWrapping="NoWrap"
				Text="{x:Bind Controller.uLabelText_Text}"
				/>
		</Button>
		<ContentPresenter
			x:Name="uAction"
			my:Stack.Weight="1"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			/>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="TypeStateGroup">
				<VisualState x:Name="NullState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<Button
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										IsEnabled="False"
										/>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="BooleanState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<TextBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										LostFocus="{x:Bind Controller.uBooleanValue_LostFocus}"
										PlaceholderText="Boolean"
										Text="{x:Bind Controller.uBooleanValue_Text}"
										/>
									<ToggleButton
										ToolTipService.ToolTip="No"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										IsChecked="{x:Bind Controller.uBooleanValueNo_IsChecked}"
										Click="{x:Bind Controller.uBooleanValueNo_Click}"
										Content="{community:FontIcon FontSize={StaticResource MediumIconSize}, Glyph={StaticResource FluentIconGlyph.RemoveFrom}}"
										/>
									<ToggleButton
										ToolTipService.ToolTip="Yes"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										IsChecked="{x:Bind Controller.uBooleanValueYes_IsChecked}"
										Click="{x:Bind Controller.uBooleanValueYes_Click}"
										Content="{community:FontIcon FontSize={StaticResource MediumIconSize}, Glyph={StaticResource FluentIconGlyph.Completed}}"
										/>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="IntegerState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<NumberBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										LostFocus="{x:Bind Controller.uIntegerValue_LostFocus}"
										NumberFormatter="{x:Bind Controller.uIntegerValue_NumberFormatter}"
										PlaceholderText="Integer"
										Value="{x:Bind Controller.uIntegerValue_Value}"
										/>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="FloaterState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<NumberBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										LostFocus="{x:Bind Controller.uFloaterValue_LostFocus}"
										NumberFormatter="{x:Bind Controller.uFloaterValue_NumberFormatter}"
										PlaceholderText="Floater"
										Value="{x:Bind Controller.uFloaterValue_Value}"
										/>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="SizeState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<NumberBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										LostFocus="{x:Bind Controller.uSizeCount_LostFocus}"
										NumberFormatter="{x:Bind Controller.uSizeCount_NumberFormatter}"
										PlaceholderText="Size"
										Value="{x:Bind Controller.uSizeCount_Value}"
										/>
									<Button
										ToolTipService.ToolTip="Exponent"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Width="44"
										Content="{x:Bind Controller.uSizeExponent_Content}"
										>
										<Button.Flyout>
											<MenuFlyout Placement="BottomEdgeAlignedRight">
												<MenuFlyoutItem
													Tag="0"
													Click="{x:Bind Controller.uSizeExponentMenu_Click}"
													Text="B"
													/>
												<MenuFlyoutItem
													Tag="1"
													Click="{x:Bind Controller.uSizeExponentMenu_Click}"
													Text="K"
													/>
												<MenuFlyoutItem
													Tag="2"
													Click="{x:Bind Controller.uSizeExponentMenu_Click}"
													Text="M"
													/>
												<MenuFlyoutItem
													Tag="3"
													Click="{x:Bind Controller.uSizeExponentMenu_Click}"
													Text="G"
													/>
											</MenuFlyout>
										</Button.Flyout>
									</Button>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="StringState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<TextBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										LostFocus="{x:Bind Controller.uStringValue_LostFocus}"
										PlaceholderText="String"
										Text="{x:Bind Controller.uStringValue_Text}"
										/>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="PathState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<TextBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										AllowDrop="True"
										DragOver="{x:Bind Controller.uPathContent_DragOver}"
										Drop="{x:Bind Controller.uPathContent_Drop}"
										LostFocus="{x:Bind Controller.uPathContent_LostFocus}"
										PlaceholderText="Path"
										Text="{x:Bind Controller.uPathContent_Text}"
										/>
									<Button
										ToolTipService.ToolTip="Pick"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Content="{community:FontIcon FontSize={StaticResource MediumIconSize}, Glyph={StaticResource FluentIconGlyph.OpenInNewWindow}}"
										>
										<Button.Flyout>
											<MenuFlyout Placement="BottomEdgeAlignedRight">
												<MenuFlyoutItem
													Tag="LoadFile"
													Click="{x:Bind Controller.uPathPickMenu_Click}"
													Icon="{community:FontIcon Glyph={StaticResource FluentIconGlyph.Document}}"
													Text="Load File"
													/>
												<MenuFlyoutItem
													Tag="LoadDirectory"
													Click="{x:Bind Controller.uPathPickMenu_Click}"
													Icon="{community:FontIcon Glyph={StaticResource FluentIconGlyph.Folder}}"
													Text="Load Directory"
													/>
												<MenuFlyoutItem
													Tag="SaveFile"
													Click="{x:Bind Controller.uPathPickMenu_Click}"
													Icon="{community:FontIcon Glyph={StaticResource FluentIconGlyph.Save}}"
													Text="Save File"
													/>
											</MenuFlyout>
										</Button.Flyout>
									</Button>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="EnumerationState">
					<VisualState.Setters>
						<Setter Target="uAction.Content">
							<Setter.Value>
								<my:Stack
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Orientation="Horizontal"
									Spacing="8"
									>
									<ComboBox
										my:Stack.Weight="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										HorizontalContentAlignment="Left"
										PlaceholderText="Enumeration"
										ItemsSource="{x:Bind Controller.uEnumerationItem_ItemsSource}"
										SelectedIndex="{x:Bind Controller.uEnumerationItem_SelectedIndex}"
										SelectionChanged="{x:Bind Controller.uEnumerationItem_SelectionChanged}"
										/>
									<Button
										ToolTipService.ToolTip="Reset"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Click="{x:Bind Controller.uEnumerationItemNull_Click}"
										Content="{community:FontIcon FontSize={StaticResource MediumIconSize}, Glyph={StaticResource FluentIconGlyph.UpdateRestore}}"
										/>
								</my:Stack>
							</Setter.Value>
						</Setter>
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</my:Stack>
</local:CustomControl>
