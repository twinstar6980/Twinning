<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:community="using:CommunityToolkit.WinUI"
	xmlns:communityControls="using:CommunityToolkit.WinUI.Controls"
	xmlns:local="using:AssistantPlus"
	xmlns:my="using:AssistantPlus.Control"
	>
	<!-- Common -->
	<Thickness x:Key="BorderThickness">1</Thickness>
	<x:Double x:Key="DividerThickness">1</x:Double>
	<x:Double x:Key="MiniIconSize">13</x:Double>
	<x:Double x:Key="SmallIconSize">17</x:Double>
	<x:Double x:Key="MediumIconSize">19</x:Double>
	<x:Double x:Key="LargeIconSize">21</x:Double>
	<TransitionCollection x:Key="PopupThemeTransitionCollection">
		<PopupThemeTransition />
	</TransitionCollection>
	<!-- InfoBadge -->
	<Style x:Key="AttentionDotInfoBadgeStyle" TargetType="InfoBadge" BasedOn="{StaticResource AttentionDotInfoBadgeStyle}">
		<Setter Property="Background" Value="{ThemeResource FluentColor.Information}" />
	</Style>
	<Style x:Key="AttentionValueInfoBadgeStyle" TargetType="InfoBadge" BasedOn="{StaticResource AttentionValueInfoBadgeStyle}">
		<Setter Property="Background" Value="{ThemeResource FluentColor.Information}" />
	</Style>
	<Style x:Key="AttentionIconInfoBadgeStyle" TargetType="InfoBadge" BasedOn="{StaticResource AttentionIconInfoBadgeStyle}">
		<Setter Property="Background" Value="{ThemeResource FluentColor.Information}" />
	</Style>
	<!-- InfoBar -->
	<SolidColorBrush x:Key="InfoBarInformationalSeverityBackgroundBrush" Color="{ThemeResource FluentColor.InformationContainer}" />
	<SolidColorBrush x:Key="InfoBarWarningSeverityBackgroundBrush" Color="{ThemeResource FluentColor.WarningContainer}" />
	<SolidColorBrush x:Key="InfoBarErrorSeverityBackgroundBrush" Color="{ThemeResource FluentColor.ErrorContainer}" />
	<SolidColorBrush x:Key="InfoBarSuccessSeverityBackgroundBrush" Color="{ThemeResource FluentColor.SuccessContainer}" />
	<!-- Flyout -->
	<Style x:Key="NormalFlyoutPresenterStyle" TargetType="FlyoutPresenter" BasedOn="{StaticResource DefaultFlyoutPresenterStyle}">
		<Setter Property="IsTabStop" Value="True" />
	</Style>
	<Style x:Key="VerticalScrollFlyoutPresenterStyle" TargetType="FlyoutPresenter" BasedOn="{StaticResource DefaultFlyoutPresenterStyle}">
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
	</Style>
	<Style x:Key="CompactFlyoutPresenterStyle" TargetType="FlyoutPresenter" BasedOn="{StaticResource DefaultFlyoutPresenterStyle}">
		<Setter Property="Padding" Value="2" />
		<Setter Property="BorderBrush" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" />
		<Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
	</Style>
	<!-- ListView -->
	<Style x:Key="FullWidthListViewHeaderItemStyle" TargetType="ListViewHeaderItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>
	<!-- TreeView -->
	<Thickness x:Key="TreeViewItemMultiSelectSelectedItemBorderMargin">0,0,0,-2</Thickness>
	<!-- fix the bug of TreeViewItem.IsEnabled, remove here if this issue has been fixed: https://github.com/microsoft/microsoft-ui-xaml/issues/8298 -->
	<Style TargetType="TreeViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Background" Value="{ThemeResource TreeViewItemBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource TreeViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource TreeViewItemBorderThemeThickness}" />
		<Setter Property="GlyphBrush" Value="{ThemeResource TreeViewItemForeground}" />
		<Setter Property="MinHeight" Value="{ThemeResource TreeViewItemMinHeight}" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="FocusVisualMargin" Value="0,-1,0,-1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<Grid
						x:Name="ContentPresenterGrid"
						Margin="{ThemeResource TreeViewItemPresenterMargin}"
						Padding="{ThemeResource TreeViewItemPresenterPadding}"
						CornerRadius="{TemplateBinding CornerRadius}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						Background="{TemplateBinding Background}"
						>
						<Rectangle
							x:Name="SelectionIndicator"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Width="3"
							Height="16"
							Opacity="0"
							Fill="{ThemeResource TreeViewItemSelectionIndicatorForeground}"
							RadiusX="2"
							RadiusY="2"
							/>
						<Grid
							x:Name="MultiSelectGrid"
							Margin="{ThemeResource TreeViewItemMultiSelectSelectedItemBorderMargin}"
							Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.Indentation}"
							CornerRadius="{ThemeResource ControlCornerRadius}"
							BorderThickness="{ThemeResource TreeViewItemBorderThemeThickness}"
							BorderBrush="Transparent"
							>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid
								Grid.Column="0"
								>
								<CheckBox
									x:Name="MultiSelectCheckBox"
									Visibility="Collapsed"
									VerticalAlignment="Center"
									Width="32"
									MinWidth="32"
									MinHeight="{ThemeResource TreeViewItemMultiSelectCheckBoxMinHeight}"
									Margin="10,0,0,0"
									IsTabStop="False"
									AutomationProperties.AccessibilityView="Raw"
									/>
								<Border
									x:Name="MultiArrangeOverlayTextBorder"
									Visibility="Collapsed"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									MinWidth="20"
									Height="20"
									CornerRadius="{ThemeResource ControlCornerRadius}"
									BorderThickness="1"
									BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"
									Background="{ThemeResource SystemControlBackgroundAccentBrush}"
									IsHitTestVisible="False"
									>
									<TextBlock
										x:Name="MultiArrangeOverlayText"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Foreground="{ThemeResource SystemControlForegroundChromeWhiteBrush}"
										Style="{ThemeResource CaptionTextBlockStyle}"
										Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.DragItemsCount}"
										IsHitTestVisible="False"
										AutomationProperties.AccessibilityView="Raw"
										/>
								</Border>
							</Grid>
							<Grid
								x:Name="ExpandCollapseChevron"
								Grid.Column="1"
								Width="Auto"
								Padding="14,0"
								Background="Transparent"
								Opacity="{TemplateBinding GlyphOpacity}"
								>
								<TextBlock
									x:Name="CollapsedGlyph"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}"
									VerticalAlignment="Center"
									Width="12"
									Height="12"
									Padding="2"
									Foreground="{TemplateBinding GlyphBrush}"
									FontSize="{TemplateBinding GlyphSize}"
									Text="{TemplateBinding CollapsedGlyph}"
									FontFamily="{StaticResource SymbolThemeFontFamily}"
									AutomationProperties.AccessibilityView="Raw"
									IsTextScaleFactorEnabled="False"
									IsHitTestVisible="False"
									/>
								<TextBlock
									x:Name="ExpandedGlyph"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}"
									VerticalAlignment="Center"
									Width="12"
									Height="12"
									Padding="2"
									Foreground="{TemplateBinding GlyphBrush}"
									FontSize="{TemplateBinding GlyphSize}"
									Text="{TemplateBinding ExpandedGlyph}"
									FontFamily="{StaticResource SymbolThemeFontFamily}"
									AutomationProperties.AccessibilityView="Raw"
									IsTextScaleFactorEnabled="False"
									IsHitTestVisible="False"
									/>
							</Grid>
							<ContentPresenter
								x:Name="ContentPresenter"
								Grid.Column="2"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								MinHeight="{ThemeResource TreeViewItemContentHeight}"
								Margin="{TemplateBinding Padding}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Content="{TemplateBinding Content}"
								/>
						</Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusedStates">
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectEnabled" />
								<VisualState x:Name="MultiSelectDisabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionIndicatorState">
								<VisualState x:Name="SelectionIndicatorEnabled" />
								<VisualState x:Name="SelectionIndicatorDisabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPointerOver}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPointerOver}" />
										<Setter Target="SelectionIndicator.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPressed}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPressed}" />
										<Setter Target="SelectionIndicator.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForeground}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelected}" />
										<Setter Target="SelectionIndicator.Opacity" Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundDisabled}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushDisabled}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPointerOver}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPointerOver}" />
										<Setter Target="SelectionIndicator.Opacity" Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPressed}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPressed}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPressed}" />
										<Setter Target="SelectionIndicator.Opacity" Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="SelectedDisabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedDisabled}" />
										<Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundDisabled}" />
										<Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedDisabled}" />
										<Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedDisabled}" />
										<Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedDisabled}" />
										<Setter Target="SelectionIndicator.Opacity" Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ReorderedPlaceholder">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="MultiSelectGrid" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TreeViewMultiSelectStates">
								<VisualState x:Name="TreeViewMultiSelectDisabled" />
								<VisualState x:Name="TreeViewMultiSelectEnabledUnselected">
									<VisualState.Setters>
										<Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
										<Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
										<Setter Target="ContentPresenterGrid.Padding" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="TreeViewMultiSelectEnabledSelected">
									<VisualState.Setters>
										<Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
										<Setter Target="MultiSelectGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
										<Setter Target="MultiSelectGrid.BorderBrush" Value="{ThemeResource TreeViewItemMultiSelectBorderBrushSelected}" />
										<Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
										<Setter Target="ContentPresenterGrid.Padding" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="MultipleDraggingPrimary">
									<VisualState.Setters>
										<Setter Target="MultiSelectCheckBox.Opacity" Value="0" />
										<Setter Target="MultiArrangeOverlayTextBorder.Visibility" Value="Visible" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- TabView -->
	<SolidColorBrush x:Key="TabViewItemHeaderBackgroundSelected" Color="Transparent" />
	<SolidColorBrush x:Key="TabViewBorderBrush" Color="{ThemeResource DividerStrokeColorDefault}" />
	<!-- View.ModdingWorker -->
	<FontFamily x:Key="ModdingWorker.MessageFont">XamlAutoFontFamily</FontFamily>
</ResourceDictionary>
